Ext.data.JsonP.dev_balloontoolbar({"guide":"<!--\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nFor licensing, see LICENSE.md.\n-->\n\n\n<h1 id='dev_balloontoolbar-section-balloon-toolbar'>Balloon Toolbar</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/dev_balloontoolbar-section-toolbar-contexts'>Toolbar Contexts</a><ol>\n<li>\n<a href='#!/guide/dev_balloontoolbar-section-context-matchers'>Context Matchers</a></li>\n<li>\n<a href='#!/guide/dev_balloontoolbar-section-context-priorities'>Context Priorities</a></li>\n</ol>\n<li>\n<a href='#!/guide/dev_balloontoolbar-section-creating-balloon-toolbar-without-contexts'>Creating Balloon Toolbar Without Contexts</a></li>\n<li>\n<a href='#!/guide/dev_balloontoolbar-section-balloon-toolbar-demo'>Balloon Toolbar Demo</a></li></ol>\n</div>\n\n<p class=\"requirements\">\n    This feature was introduced in <strong>CKEditor 4.8</strong>. It is provided through the <a href=\"https://ckeditor.com/cke4/addon/balloontoolbar\">Balloon Toolbar</a> plugin that is not included in any CKEditor preset available from the <a href=\"https://ckeditor.com/ckeditor-4/download/\">Download</a> site and <a href=\"#!/guide/dev_plugins\">needs to be added to your custom build</a> with <a href=\"https://ckeditor.com/cke4/builder\">CKBuilder</a>.\n</p>\n\n\n<p>This plugin adds a possibility to display a toolbar, pointing at a particular element in the editor content.</p>\n\n<p><p><img src=\"guides/dev_balloontoolbar/balloon-toolbar.png\" alt=\"\" width=\"640\" height=\"216\"></p></p>\n\n<h2 id='dev_balloontoolbar-section-toolbar-contexts'>Toolbar Contexts</h2>\n\n<p>Sometimes certain buttons are relevant only for a particular content type. For instance \"Open link\" button is relevant only for links, list properties button is relevant only for lists, and so on.</p>\n\n<p>To solve this particular problem we created Toolbar Context concept. It means that you can define multiple different toolbar contexts, each with a certain matching logic, but the editor will find the best match to use only one context at a time.</p>\n\n<p>Adding a context is very simple, for example, the following code adds a context for a <a href=\"https://ckeditor.com/cke4/addon/image2\">Enhanced Image</a> widget:</p>\n\n<pre><code class=\"js\">editor.balloonToolbars.create ( {\n    buttons: 'Link,Unlink,Image',\n    widgets: 'image'\n} );\n</code></pre>\n\n<p><p><img src=\"guides/dev_balloontoolbar/balloon-toolbar.gif\" alt=\"\" width=\"640\" height=\"239\"></p></p>\n\n<p>For more information on creating contexts, see <a href=\"https://docs.ckeditor.com/ckeditor4/docs/#!/api/CKEDITOR.plugins.balloontoolbar.contextManager-method-create\"><code>contextManager.create</code></a> API docs.</p>\n\n<h3 id='dev_balloontoolbar-section-context-matchers'>Context Matchers</h3>\n\n<p>Toolbar contexts have the following matchers:</p>\n\n<ol>\n<li>CSS matching - <code>options.cssSelector</code> e.g. <code>options.cssSelector = 'a[href], img';</code></li>\n<li>Widgets matching - <code>options.widgets</code> e.g. <code>options.widgets = 'image,placeholder';</code>\n It is important to mention that this matcher is only checked against focused widget. In case if the selection is inside of an editable, this matcher no longer applies (but others do).</li>\n<li>Callback - <code>options.refresh</code> e.g. <code>options.refresh = function( editor, path ) { return path.contains( 'em' ); };</code></li>\n</ol>\n\n\n<h3 id='dev_balloontoolbar-section-context-priorities'>Context Priorities</h3>\n\n<p>By default, matchers do not have the same priority.</p>\n\n<p>The default priorities are as follows:</p>\n\n<ol>\n<li>Callback,</li>\n<li>Widgets matching,</li>\n<li>CSS matching.</li>\n</ol>\n\n\n<div class=\"tip\">\n    Each context can have its priority adjusted further, so that it takes precedence over other contexts. For more information on that read the <a href=\"https://docs.ckeditor.com/ckeditor4/docs/#!/api/CKEDITOR.plugins.balloontoolbar.contextDefinition-property-priority\"><code>contextDefinition.priority</code></a> documentation.\n</div>\n\n\n<h2 id='dev_balloontoolbar-section-creating-balloon-toolbar-without-contexts'>Creating Balloon Toolbar Without Contexts</h2>\n\n<p>It is possible to use low level API to control a Balloon Toolbar directly, in such case the balloon should be created using the <code>balloonToolbar</code> constructor directly. See <a href=\"https://docs.ckeditor.com/ckeditor4/docs/#!/api/CKEDITOR.ui.balloonToolbar\"><code>CKEDITOR.ui.balloonToolbar</code></a> type docs for more details.</p>\n\n<h2 id='dev_balloontoolbar-section-balloon-toolbar-demo'>Balloon Toolbar Demo</h2>\n\n<p>See the <a href=\"../samples/balloontoolbar.html\">\"Balloon Toolbar\" sample</a> that shows an example of Balloon Toolbar usage.</p>\n","title":"Balloon Toolbar","meta_description":"Using Balloon Toolbars in CKEditor.","meta_keywords":"ckeditor, editor, wysiwyg, ui, interface, toolbar, buttons, balloon, inline, floating"});