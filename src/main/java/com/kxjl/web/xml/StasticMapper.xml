<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kxjl.web.stastic.dao.StasticDao">
	<resultMap id="ActionLogMap" type="com.kxjl.web.stastic.model.ActionLog">

	</resultMap>


	<resultMap id="DictInfoMap" type="com.kxjl.web.system.model.DictInfo">
	
	</resultMap>
	

	<resultMap id="Map" type="java.util.HashMap">

	</resultMap>


<select id="GetActionListCount"  parameterType="com.kxjl.web.stastic.model.ActionLog"
		resultType="java.lang.Integer">
	
	select count(*) from (	
select log.*,b.title blogname  from user_action_log log left join blog_info b on log.blog_id=b.imei
 where
 type_first='${type_first}' 
	<if test='type_second!=null and type_second!= "" '>
 and type_second='${type_second}'
 </if>
 
 <if test='userid !=null and userid != "" '>
 and userid=#{userid}
 </if>

and 
str_to_date(action_date,'${dateFormat}') = str_to_date('${time1}','${dateFormat}')
	)	 t
 
 	
	</select>
	
<select id="GetActionList"  parameterType="com.kxjl.web.stastic.model.ActionLog"
		 resultMap="ActionLogMap">
		
select log.*,b.title blogname  from user_action_log log left join blog_info b on log.blog_id=b.imei
 where
 type_first='${type_first}' 
	<if test='type_second!=null and type_second!= "" '>
 and type_second='${type_second}'
 </if>
 <if test='userid !=null and userid != "" '>
 and userid=#{userid}
 </if>
and 
str_to_date(action_date,'${dateFormat}') = str_to_date('${time1}','${dateFormat}')
		
 
 	limit ${start},${pageCount}
	</select>



	<select id="GetDetailList"  parameterType="com.kxjl.web.stastic.model.ActionLog"
		 resultMap="ActionLogMap">
		
select city,userid,count(*) total_uv from user_action_log where
 type_first='${type_first}' 
	<if test='type_second!=null and type_second!= "" '>
 and type_second='${type_second}'
 </if>

and 
str_to_date(action_date,'${dateFormat}') = str_to_date('${time1}','${dateFormat}')
		
 group by userid,city
 	limit ${start},${pageCount}
	</select>
	
	
	<select id="GetDetailListCount"  parameterType="com.kxjl.web.stastic.model.ActionLog"
		 resultType="java.lang.Integer">
	
	    select count(*) from (
select city,userid,count(*) total_uv from user_action_log where 
type_first='${type_first}' 
	<if test='type_second!=null and type_second!= "" '>
 and type_second='${type_second}'
 </if>
 
and 

str_to_date(action_date,'${dateFormat}') = str_to_date('${time1}','${dateFormat}')
	
 group by userid,city
 	)	tp
	</select>
	
	
	<select id="GetStaticTypeList" 
		 resultMap="DictInfoMap">
		 select CONCAT(type_first,'_',type_second) dict_key,name dict_name from user_action_log_template
	</select>
	
	
	<select id="GetUserVisitRecondList" parameterType="java.util.Map"
		statementType="STATEMENT" resultMap="Map">

		select name,hour,
		${caseblock}
		from (
		select name,hour,app_name,count(*) stat
		from (

		select * from (
		(select tmp.*,u.name,app.name app_name
		,date_format( str_to_date(action_date,'%Y-%m-%d %H:%i:%s'),'${dateFormat}') hour
		from user_action_log tmp
		left join user_action_log_template app on tmp.type_first=app.type_first
		left join user u on tmp.userid=u.userid
		where tmp.type_first in('应用服务','办事指南')
			<if test='sex != "" '>
			and u.sex = ${sex}
		</if>
		<if test='age1!=null and age1 != "" '>
			and u.age &gt; ${age1} and u.age &lt; ${age2}
		</if>
		)
		union
		(
		select tmp.*,u.name,app.name app_name
		,date_format( str_to_date(action_date,'%Y-%m-%d %H:%i:%s'),'${dateFormat}') hour
		from user_action_log tmp
		left join user_action_log_template app on tmp.type_second=app.type_second
		and tmp.type_first=app.type_first
		left join user u on tmp.userid=u.userid
		where tmp.type_first not in('应用服务','办事指南','svr_error')
			<if test='sex != "" '>
			and u.sex = ${sex}
		</if>
		<if test='age1!=null and age1 != "" '>
			and u.age &gt; ${age1} and u.age &lt; ${age2}
		</if>
		)
		) innertmp where 1=1
		and str_to_date(action_date,'${dateFormat}') BETWEEN
		str_to_date('${time1}','${dateFormat}')
		and str_to_date('${time2}','${dateFormat}')
		and name like '%${name}%'
	
		
		) tmp2 group by hour,name,app_name
		) tmp3 group by name,hour
		limit ${start},${pageCount}
	</select>

	<select id="GetUserAppuseRecondList" parameterType="java.util.Map"
		statementType="STATEMENT" resultMap="Map">


		select name,hour,
		${caseblock}
		from (
		select name,hour,app_name,count(*) stat
		from (
		select tmp.*,u.name,app.app_name
		,date_format( str_to_date(action_date,'%Y-%m-%d %H:%i:%s'),'${dateFormat}') hour
		from user_action_log tmp
		left join app_service_info app on tmp.type_second=app.app_id
		left join user u on tmp.userid=u.userid
		where tmp.type_first='应用服务'
		and
		str_to_date(action_date,'${dateFormat}') BETWEEN str_to_date('${time1}','${dateFormat}')
		and str_to_date('${time2}','${dateFormat}')
		and u.name like '%${name}%'

			<if test='sex != "" '>
			and u.sex = ${sex}
		</if>
		<if test='age1!=null and age1 != "" '>
			and u.age &gt; ${age1} and u.age &lt; ${age2}
		</if>
		
		
		order by str_to_date(action_date,'%Y-%m-%d %H %i %s'),tmp.userid desc
		) tmp2 group by hour,name,app_name
		) tmp3 group by name,hour
		limit ${start},${pageCount}

	</select>
	<!-- public List<HashMap<Object, Object>> GetUserFocusAppList( @Param(value="name") 
		String name ,@Param(value="sex") String sex ,@Param(value="age1") String 
		age1 ,@Param(value="age2") String age2 ,@Param(value="caseblock") String 
		caseblock ,@Param(value="inblock") String inblock ); -->
	<select id="GetUserFocusAppList" parameterType="java.util.Map"
		statementType="STATEMENT" resultMap="Map">

		select name,userid,
		${caseblock}
		from
		(
		select
		u.name,u.userid,stat,app.app_name,app.app_id from
		(

		select
		u.userid,name,account_code,'不关注' stat from user u left join
		pp_account_user_never_focus n
		on u.userid=n.userid
		where account_code is
		not null
		union

		select * FROM(
		select u.userid,name,app_id
		account_code,'关注' stat from user u join
		app_service_info n
		) tmp
		where
		not exists(
		select * from user u left join pp_account_user_never_focus
		n
		on u.userid=n.userid
		where account_code is not null
		and
		u.userid=tmp.userid and account_code=tmp.account_code
		)
		) tmp2 left join
		app_service_info app on tmp2.account_code=app.app_id
		left join user u
		on tmp2.userid=u.userid

		where app.app_name is not null
		and u.name like
		CONCAT('%','${name}','%')
		<if test='sex != "" '>
			and u.sex = ${sex}
		</if>
		<if test='age1!=null and age1 != "" '>
			and u.age &gt; ${age1} and u.age &lt; ${age2}
		</if>

		and app.app_id in ( ${inblock} )
		) tmp3
		group by userid
		limit
		${start},${pageCount}

	</select>




	<select id="GetHourDetailList" parameterType="com.kxjl.web.stastic.model.ActionLog"
		resultMap="ActionLogMap">
		select d.* from user_action_hour d

		where 1=1
		and
		type_first=#{type_first}
		and type_second=#{type_second}
		and
		str_to_date(action_date,'%Y-%m-%d %H') BETWEEN
		str_to_date(#{action_date},'%Y-%m-%d %H') and
		str_to_date(#{action_date_end},'%Y-%m-%d %H')
		order by action_date asc
	</select>

	<select id="GetMonthDetailList" parameterType="com.kxjl.web.stastic.model.ActionLog"
		resultMap="ActionLogMap">
		select d.* from user_action_month d

		where 1=1
		and
		type_first=#{type_first}
		and type_second=#{type_second}
		and
		str_to_date(action_date,'%Y-%m') BETWEEN
		str_to_date(#{action_date},'%Y-%m') and
		str_to_date(#{action_date_end},'%Y-%m')
		order by action_date asc
	</select>

	<select id="GetDayDetailList" parameterType="com.kxjl.web.stastic.model.ActionLog"
		resultMap="ActionLogMap">
		select d.* from user_action_day d

		where 1=1
		and
		type_first=#{type_first}
		and type_second=#{type_second}
		and
		str_to_date(action_date,'%Y-%m-%d') BETWEEN
		str_to_date(#{action_date},'%Y-%m-%d') and
		str_to_date(#{action_date_end},'%Y-%m-%d')
		order by action_date asc
	</select>



	<select id="GetNormalHourDetailList" parameterType="com.kxjl.web.stastic.model.ActionLog"
		resultMap="ActionLogMap">
		select d.*
		, substring(d.action_date,12,2) type_name from
		user_action_hour d
		where 1=1 and
		type_first=#{type_first}
		and
		type_second=#{type_second}
		and str_to_date(action_date,'%Y-%m-%d %H')
		BETWEEN str_to_date(#{action_date},'%Y-%m-%d %H')
		and
		str_to_date(#{action_date_end},'%Y-%m-%d %H')
	</select>




	<insert id="addActionLog" parameterType="com.kxjl.web.stastic.model.ActionLog">
		insert
		into
		user_action_log
		(
		userid,
		action_date,
		type_first,
		type_second,
		city,
		blog_id
		)
		values(
		#{userid},
		date_format(now(), '%Y-%m-%d %H:%i:%s'),
		#{type_first},
		#{type_second},
		#{city},
		#{blog_id}

		)
	</insert>





</mapper>
  





