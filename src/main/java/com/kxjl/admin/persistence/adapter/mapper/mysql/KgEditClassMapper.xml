<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kxjl.admin.persistence.adapter.dao.KgEditClassMapperAdapter">
 <!--    <resultMap id="BaseResultMap"
               type="com.kxjl.admin.persistence.entity.KgEditClass"
               extends="com.kxjl.admin.persistence.dao.KgEditClassMapper.BaseResultMap">
    </resultMap>
     在此编写自己的sql, 生成的sql文件不需要编辑

    <select id="selectByCondition" parameterType="com.kxjl.admin.persistence.entity.KgEditClass" resultMap="BaseResultMap">

    </select>
     -->
    <sql id="selectAllClassTable"  databaseId="mysql">

		(
		select c.ID, c.VERSION_ID, c.CLS_NAME,c.PROPERTIES, c.CODE, c.
		PARENT_ID,
		c.SORT, c. DIR_ID, c.DIR_CODE, c.ENABLED, c.DELETED,
		c.CREATED_USER, c.CREATED_TIME, c.remark, c.UPDATED_USER,
		c.UPDATED_TIME
		from KG_CLASS c
	
				UNION all
			(
			select c.ID, c.VERSION_ID,
			c.CLS_NAME,c.PROPERTIES, c.CODE, c. PARENT_ID,
			c.SORT, c. DIR_ID,
			c.DIR_CODE, c.ENABLED, c.DELETED,
			c.CREATED_USER, c.CREATED_TIME,
			c.remark, c.UPDATED_USER, c.UPDATED_TIME from
			KG_EDIT_CLASS c
			left join
			kg_edit_data e on c.id=e.edit_data_id
			where 1=1 
			<!-- and e.edit_user=#{curUser}
			and e.edit_action='1'
and e.audit_state in ('1','2') --> 
			)
	
	
		)
	</sql>


	<sql id="selectAllPropertyTable"  databaseId="mysql">

		(
		select c.ID, c.VERSION_ID, c.NAME, c.DATA_TYPE_RULE, c.EQUIVALENCE,
		c.REMARK, c.ENABLED, c.DELETED, c.CREATED_USER,
		c.CREATED_TIME,
		c.UPDATED_USER, c.UPDATED_TIME from
		KG_PROPERTY c
		<!-- <if test="curUser != null and curUser!='' "> -->
			union
			(
			select c.ID, c.VERSION_ID, c.NAME, c.DATA_TYPE_RULE,
			c.EQUIVALENCE,
			c.REMARK, c.ENABLED, c.DELETED, c.CREATED_USER,
			c.CREATED_TIME, c.UPDATED_USER, c.UPDATED_TIME from
			KG_EDIT_PROPERTY c
		 	left join kg_edit_data e on c.id=e.edit_data_id
			where 1=1 
		
			and e.edit_action='1'
			and e.audit_state in ('1','2') 
			)
	<!-- 	</if> -->
		)

	</sql>

	<select id="selectList"  databaseId="mysql"
		parameterType="com.kxjl.admin.persistence.entity.KgEditClass"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Jun 08 
			11:51:06 CST 2020. -->
		select
		c.ID, c.VERSION_ID, c.CLS_NAME,c.PROPERTIES, c.CODE, c.
		PARENT_ID, c.SORT,
		c. DIR_ID, c.DIR_CODE, c.ENABLED, c.DELETED,
		c.CREATED_USER, c.CREATED_TIME, c.remark, c.UPDATED_USER,
		c.UPDATED_TIME
		,g.subGroupNames subName,p.cls_name
		parentName,tp.attrNames,tp.attrIds
		attrs
		,g.subGroupNames
		subNames,g.subGroupIds subIds
		from
		<include refid="selectAllClassTable" />
		c
		left join (
		

			select id,GROUP_CONCAT(tp.name order by tp.kid) subGroupNames,GROUP_CONCAT(tp.kid order by tp.kid) subGroupIds
	
		from (
		select c.id,kp.name,kp.id kid
		FROM
		<include refid="selectAllClassTable" />
		c
		left join KG_OBJECT_SUB_GROUP op on c.id=op.obj_id
		left join
		KG_SUB_GROUP kp on op.sub_group_id=kp.id
	
		) tp where 1=1 group by id



		) g on c.id=g.id
		left join
		<include refid="selectAllClassTable" />
		p on p.id=c.parent_id
		left join (


		select id,GROUP_CONCAT(tp.name order by tp.kid) attrNames,GROUP_CONCAT(tp.kid order by tp.kid)
		attrIds from (
	
		select c.id,kp.name,kp.id kid
		FROM
		<include refid="selectAllClassTable" />
		c
		LEFT JOIN KG_OBJECT_PROPERTY op ON c. ID = op.cls_id
		LEFT JOIN
		<include refid="selectAllPropertyTable" />
		kp ON op.prop_id = kp. ID
	
		) tp where 1=1 group by id


		) tp on
		c.id=tp.id

		where 1=1 and c.deleted='0'


		<if test="clsName != null and clsName!='' ">
			<bind name="clsName" value="'%' + clsName + '%'" />
			AND c.cls_name LIKE #{clsName}

		</if>

		<if test="querySubIds != null  ">

			AND (

			<foreach collection="querySubIds" item="id" index="index"
				open="" close="" separator=" or ">

				g.subGroupIds like '%${id}%'
			</foreach>
			or g.subGroupIds is null )

		</if>
		<if test="parentId != null and parentId !='' ">


			AND c.parent_id in (
			select DISTINCT C1.id from KG_CLASS c1
			left join KG_CLASS c2 ON
			c1.id=c2.parent_id
			left join KG_CLASS c3 ON
			c3.id=c2.parent_id
			left join KG_CLASS c4 ON c4.id=c3.parent_id
			left
			join KG_CLASS c5 ON c5.id=c4.parent_id
			left join KG_CLASS c6 ON
			c6.id=c5.parent_id
			where C1.parent_id=#{parentId}
			or
			c2.PARENT_ID=#{parentId}
			or c3.PARENT_ID=#{parentId}
			or
			c4.PARENT_ID=#{parentId}
			or c5.PARENT_ID=#{parentId}
			or
			c6.PARENT_ID=#{parentId}
			)


		</if>

		<if test=" id != null and id !='' ">

			AND c.id = #{id}

		</if>


		order by c.CREATED_TIME desc,c.sort asc
	</select>

</mapper>