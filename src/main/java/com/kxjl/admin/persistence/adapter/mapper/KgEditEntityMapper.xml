<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kxjl.admin.persistence.adapter.dao.KgEditEntityMapperAdapter">
    <resultMap id="BaseResultMap"
               type="com.kxjl.admin.persistence.entity.KgEditEntity"
               extends="com.kxjl.admin.persistence.dao.KgEditEntityMapper.BaseResultMap">
    </resultMap>
     <!--在此编写自己的sql, 生成的sql文件不需要编辑-->

    <select id="selectByCondition" parameterType="com.kxjl.admin.persistence.entity.KgEditEntity" resultMap="BaseResultMap">

    </select>
    
    


	<sql id="selectAllEntityTable">

		(
		select c.ID, c.VERSION_ID, c.CLS_ID, c.NAME,c.FULL_NAME, c.SUB_KG_ID,
		c.PROPERTIES, c.EXT_PROPERTIES,
		c.TAGS,c. DIR_ID,c. DIR_CODE, c.ENABLED,c. DELETED, c.CREATED_USER,
		c.CREATED_TIME, c.UPDATED_USER,
		c.UPDATED_TIME,c.ori_id
		from KG_EDIT_ENTITY c
		<!-- <if test="curUser != null and curUser!='' ">
			UNION all
			(
			select c.ID, c.VERSION_ID, c.CLS_ID,
			c.NAME,c.FULL_NAME, c.SUB_KG_ID, c.PROPERTIES, c.EXT_PROPERTIES,
			c.TAGS,c. DIR_ID,c. DIR_CODE, c.ENABLED,c. DELETED, c.CREATED_USER,
			c.CREATED_TIME, c.UPDATED_USER,
			c.UPDATED_TIME
			from
			KG_EDIT_ENTITY c
			left join kg_edit_data e on c.id=e.edit_data_id
			where
			1=1 and e.edit_user=#{curUser}
			and e.edit_action in('1','2')

			)

		</if> -->
		)
	</sql>

	<sql id="selectAllClassTable">

		(
		select c.ID, c.VERSION_ID, c.CLS_NAME,c.PROPERTIES, c.CODE, c.
		PARENT_ID,
		c.SORT, c. DIR_ID, c.DIR_CODE, c.ENABLED, c.DELETED,
		c.CREATED_USER, c.CREATED_TIME, c.remark, c.UPDATED_USER,
		c.UPDATED_TIME
		from KG_CLASS c
		<!-- <if test="curUser != null and curUser!='' "> -->
			UNION all
			(
			select c.ID, c.VERSION_ID,
			c.CLS_NAME,c.PROPERTIES, c.CODE, c. PARENT_ID,
			c.SORT, c. DIR_ID,
			c.DIR_CODE, c.ENABLED, c.DELETED,
			c.CREATED_USER, c.CREATED_TIME,
			c.remark, c.UPDATED_USER, c.UPDATED_TIME from
			KG_EDIT_CLASS c
			 left join
			kg_edit_data e on c.id=e.edit_data_id
			where 1=1 
		
				and e.edit_action='1'
			and e.audit_state in ('1','2') 

			)

	<!-- 	</if> -->
		)

	</sql>


	<sql id="selectAllDirTable">

		(
		select c.ID, c.VERSION_ID, c.DIR_CODE, c.DIR_ID, c.DIR_NAME,
		c.DIR_TYPE, c.PAR_DIR_ID, c.PAR_DIR_CODE, c.ENABLED,
		c.DELETED, c.LEAF, c.LEVEL_NUM, c.SORT, c.CREATED_USER,c. CREATED_TIME,
		c.UPDATED_USER, c.UPDATED_TIME
		from KG_DIR_TREE c
		<!-- <if test="curUser != null and curUser!='' "> -->
			UNION all
			(
			select c.ID, c.VERSION_ID, c.DIR_CODE, c.DIR_ID,
			c.DIR_NAME, c.DIR_TYPE, c.PAR_DIR_ID, c.PAR_DIR_CODE, c.ENABLED,
			c.DELETED, c.LEAF, c.LEVEL_NUM, c.SORT, c.CREATED_USER,c.
			CREATED_TIME, c.UPDATED_USER, c.UPDATED_TIME
			from
			KG_EDIT_DIR_TREE c
		 	left join kg_edit_data e on c.id=e.edit_data_id
			where 1=1 
		
			and e.edit_action='1'
			and e.audit_state in ('1','2') 

			)

	<!-- 	</if> -->
		)
	</sql>

	
	<sql id="selectAllSubTable">

		(
		select
		c.ID, c.VERSION_ID, c.NAME, c.REMARK, c.CREATED_USER, c.CREATED_TIME, c.UPDATED_USER, c.UPDATED_TIME ,c. DELETED,c. ENABLED
		from KG_SUB_GROUP c
		
		<!-- 	<if test="curUser != null and curUser!='' "> -->
		union
		(
		select   c.ID, c.VERSION_ID, c.NAME, c.REMARK, c.CREATED_USER, c.CREATED_TIME, c.UPDATED_USER, c.UPDATED_TIME ,'0' DELETED,'1' ENABLED from 
		KG_EDIT_SUB_GROUP c
		left join kg_edit_data e on c.id=e.edit_data_id
		where 1=1 
		
		and e.edit_action='1'
		and e.audit_state in ('1','2') 
		)
		<!-- </if> -->
		)
	</sql>
	
	



	<select id="selectList"
		parameterType="com.kxjl.admin.persistence.entity.KgEditEntity"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Jun 08 
			11:51:06 CST 2020. -->
		select c.ori_id,
		c.ID, c.VERSION_ID, c.CLS_ID, c.NAME,c.FULL_NAME, c.SUB_KG_ID,
		c.PROPERTIES, c.EXT_PROPERTIES,
		c.TAGS,c. DIR_ID,c. DIR_CODE, c.ENABLED,c. DELETED, c.CREATED_USER,
		c.CREATED_TIME, c.UPDATED_USER,
		c.UPDATED_TIME
		,g.subGroupNames SUB_KG_NAME,p.cls_name parentName,p.CLS_NAME
		,g.subGroupNames subNames,g.subGroupIds subIds
		,tree.dir_name dirName
		from
		<include refid="selectAllEntityTable" />
		c
		left join (
		
		
		
<if test="_databaseId =='oracle' " >
		

		select id,max(name) subGroupNames,max(kid) subGroupIds from (
		select
		id,
		WMSYS.WM_CONCAT (tp. NAME) over(partition by id order by tp.kid) name,
		WMSYS.WM_CONCAT (tp. kid) over( partition by id order by tp.kid) kid
		from (
		select c.id,kp.name,kp.id kid
		FROM
		<include refid="selectAllEntityTable" /> c
		left join KG_OBJECT_SUB_GROUP op on c.id=op.obj_id
		left join 	<include refid="selectAllSubTable" /> kp on op.sub_group_id=kp.id
		) tp
		) tp where 1=1 group by id
		</if>
		
			<if test="_databaseId =='mysql' " >
		
	    select c.id,
		group_concat(kp.name order by kp.id ) subGroupNames,
		group_concat(kp.id order by kp.id ) subGroupIds
		
		FROM
		<include refid="selectAllEntityTable" /> c
		left join KG_OBJECT_SUB_GROUP op on c.id=op.obj_id
		left join 	<include refid="selectAllSubTable" /> kp on op.sub_group_id=kp.id
		 group by c.id
		</if>
		
		
		
		
		
		) g on c.id=g.id
		left join <include refid="selectAllClassTable" /> p on p.id=c.cls_id

		left join <include refid="selectAllDirTable" />  tree on tree.id=c.dir_id


		where 1=1 and c.deleted='0'


		<if test="id != null and id!='' ">

			AND c.id = #{id}

		</if>
		<if test=" versionId != null and versionId !='' ">

			AND c.version_Id = #{versionId}

		</if>




		<if test="clsId != null and clsId!='' ">

			<if test="onlyOneLevel != null and onlyOneLevel !='' ">
				AND c.cls_id =#{clsId}
			</if>

			<if test="onlyOneLevel ==null ">


				<!-- 查询6级子目录 -->
				AND c.cls_id in (
				select DISTINCT C1.id from KG_CLASS c1 left join KG_CLASS c2 ON
				c1.id=c2.parent_id
				left join KG_CLASS c3 ON c3.id=c2.parent_id
				left join KG_CLASS c4 ON c4.id=c3.parent_id
				left join KG_CLASS c5 ON c5.id=c4.parent_id
				left join KG_CLASS c6 ON c6.id=c5.parent_id
				where C1.id=#{clsId}
				or c2.PARENT_ID=#{clsId}
				or c3.PARENT_ID=#{clsId}
				or c4.PARENT_ID=#{clsId}
				or c5.PARENT_ID=#{clsId}
				or c6.PARENT_ID=#{clsId}
				)
			</if>


		</if>



		<if test="dirId != null and dirId !='' ">

			<if test="onlyOneLevel != null and onlyOneLevel !='' ">
				AND c.dir_id =#{dirId}
			</if>

			<if test="onlyOneLevel ==null ">


				<!-- 查询6级子目录 -->
				AND c.dir_id in (
				select DISTINCT C1.id from KG_DIR_TREE c1 left join KG_DIR_TREE c2 ON
				c1.id=c2.par_dir_id
				left join KG_DIR_TREE c3 ON c3.id=c2.par_dir_id
				left join KG_DIR_TREE c4 ON c4.id=c3.par_dir_id
				left join KG_DIR_TREE c5 ON c5.id=c4.par_dir_id
				left join KG_DIR_TREE c6 ON c6.id=c5.par_dir_id
				where C1.id=#{dirId}
				or c2.par_dir_id=#{dirId}
				or c3.par_dir_id=#{dirId}
				or c4.par_dir_id=#{dirId}
				or c5.par_dir_id=#{dirId}
				or c6.par_dir_id=#{dirId}
				)
			</if>


		</if>

		<if test="subKgId != null and subKgId !='' ">

			AND ( g.subGroupIds like '%${subKgId}%' or g.subGroupIds is null )


		</if>

		<if test="name != null and name!='' ">
			<bind name="name" value="'%' + name + '%'" />

			AND c.name LIKE #{name}

		</if>
		<if test="fullName != null and fullName!='' ">
			<bind name="fullName" value="'%' + fullName + '%'" />

			AND c.full_Name LIKE #{fullName}

		</if>


		order by c.CREATED_TIME DESC
	</select>
    

</mapper>