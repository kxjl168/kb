<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.kxjl.admin.persistence.adapter.dao.KgObjectToObjectMapperAdapter">
	<resultMap id="BaseResultMap"
		type="com.kxjl.admin.persistence.entity.KgObjectToObject"
		extends="com.kxjl.admin.persistence.dao.KgObjectToObjectMapper.BaseResultMap">
	</resultMap>
	<!--在此编写自己的sql, 生成的sql文件不需要编辑，分开管理 -->



<select id="getSubKgRelation"
		parameterType="com.kxjl.admin.persistence.entity.KgSubGroup"
		resultMap="BaseResultMap">
				
select DISTINCT o2o.* from KG_OBJECT_TO_OBJECT o2o left join KG_ENTITY estart on o2o.from_id=ESTART.id 
left join KG_OBJECT_SUB_GROUP os on estart.id=os.obj_id

left join KG_ENTITY eend on o2o.to_id=eend.id 
left join KG_OBJECT_SUB_GROUP os2 on eend.id=os2.obj_id

where 1=1

		<if test="id != null and id !='' ">

AND ( os.sub_group_ID =#{id}
    or os2.sub_group_ID =#{id}
    )
		</if>

	</select>



	<select id="selectList"
		parameterType="com.kxjl.admin.persistence.entity.KgObjectToObject"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Jun 08 
			11:51:06 CST 2020. -->
		select
		c.*
		from KG_OBJECT_TO_OBJECT c
		where 1=1 and deleted='0'

		<if test="name != null and name!='' ">
			<bind name="name" value="'%' + name + '%'" />
			AND c.NAME LIKE #{name}

		</if>

		<if test="fromId != null and fromId!='' ">

			AND c.FROMID= #{fromId}

		</if>

		<if test="toId != null and toId !='' ">

			AND c.TOID LIKE #{toId}

		</if>

		order by c.CREATED_TIME DESC
	</select>
	
	 
 <delete id="deleteByFromClsId" parameterType="com.kxjl.admin.persistence.entity.KgObjectToObject">
 	delete c from KG_OBJECT_TO_OBJECT  c where 1= 1 AND c.from_id =#{fromId}
 
 </delete>
 
	
	
	<select id="selectByThreeName"  parameterType="com.kxjl.admin.persistence.entity.KgObjectToObject" resultMap="BaseResultMap">
	select * from KG_OBJECT_TO_OBJECT o2o 
left join KG_ENTITY efrom on O2O.FROM_ID=EFROM.id
left join KG_ENTITY tfrom on O2O.TO_ID=tFROM.id
left join KG_RELATION r on O2O.relation_id=r.id

where 1=1
and EFROM.full_name=#{fromEntityNameReal}
and TFROM.full_name=#{toEntityNameReal}
and r.name=#{lineNameReal}
</select>



	<!-- /** * 根据class查询一级关系的所有关系 * @param kgClass * @return * @author:kxjl 
		* @date 2020年6月16日 */ public List<KgObjectToObject> getLevelOneRelation(KgClass 
		kgClass); -->
	<select id="getLevelOneRelation"
		parameterType="com.kxjl.admin.persistence.entity.KgClass"
		resultMap="BaseResultMap">
		select o2o.*,CFROM.CLS_NAME fromClsNameReal,cto.cls_name toClsNameReal,line.name lineNameReal 
	,	efrom.properties fromNodePros, eto.properties toNodePros
	,efrom.name fromEntityNameReal,eto.name toEntityNameReal,efrom.tags fromNodeTags,eto.tags toNodeTags
		from KG_OBJECT_TO_OBJECT o2o
left join KG_CLASS cfrom on O2O.from_id=CFROM.id
left join KG_CLASS cto on O2O.to_id=cto.id
left join KG_RELATION line on O2O.relation_id=line.id
left join KG_ENTITY efrom on o2o.from_id=efrom.id
left join KG_ENTITY eto on o2o.to_id=eto.id 
 where 1=1 and O2O.deleted='0' and
		( O2O.from_Id=#{id}
		or
		 O2O.to_id=#{id}
		)

and line.DELETED='0'
	</select>
	
	


	<!-- /** * 根据class查询二级关系的所有关系 * @param kgClass * @return * @author:kxjl 
		* @date 2020年6月16日 */ public List<KgObjectToObject> getLevelTwoRelation(KgClass 
		kgClass); -->
	<select id="getLevelTwoRelation"
		parameterType="com.kxjl.admin.persistence.entity.KgClass"
		resultMap="BaseResultMap">

		select o2o.*,CFROM.CLS_NAME fromClsNameReal,cto.cls_name toClsNameReal,line.name lineNameReal 
	,	efrom.properties fromNodePros, eto.properties toNodePros
	,efrom.name fromEntityNameReal,eto.name toEntityNameReal,efrom.tags fromNodeTags,eto.tags toNodeTags
		 from (
		select * from KG_OBJECT_TO_OBJECT where 1=1 and (from_Id in (select
		from_id from
		KG_OBJECT_TO_OBJECT where (from_Id=#{id}
		or to_id=#{id}) and deleted='0' )
		or
		to_id in (select from_id from KG_OBJECT_TO_OBJECT where (from_Id=#{id}
		or to_id=#{id}) and deleted='0' ) ) and deleted='0'
		union
		select * from KG_OBJECT_TO_OBJECT where 1=1 and (from_Id in
		(select to_id from
		KG_OBJECT_TO_OBJECT where (from_Id=#{id}
		or
		to_id=#{id}) and deleted='0' )
		or to_id in (select to_id from KG_OBJECT_TO_OBJECT where
		(from_Id=#{id}
		or to_id=#{id}) and deleted='0' ) ) and deleted='0'
		) O2O
		
		left join KG_CLASS cfrom on O2O.from_id=CFROM.id
left join KG_CLASS cto on O2O.to_id=cto.id
left join KG_RELATION line on O2O.relation_id=line.id

left join KG_ENTITY efrom on o2o.from_id=efrom.id
left join KG_ENTITY eto on o2o.to_id=eto.id 
 where 1=1 

and line.DELETED='0'
		 and O2O.deleted='0'
	</select>


	<!-- /** * 根据class查询三级关系的所有关系 * @param kgClass * @return * @author:kxjl 
		* @date 2020年6月16日 */ public List<KgObjectToObject> getLevelThreeRelation(KgClass 
		kgClass); -->
	<select id="getLevelThreeRelation"
		parameterType="com.kxjl.admin.persistence.entity.KgClass"
		resultMap="BaseResultMap">
		select o2o.*,CFROM.CLS_NAME fromClsNameReal,cto.cls_name toClsNameReal,line.name lineNameReal 
	,	efrom.properties fromNodePros, eto.properties toNodePros
	,efrom.name fromEntityNameReal,eto.name toEntityNameReal,efrom.tags fromNodeTags,eto.tags toNodeTags
			 from (
		select * from KG_OBJECT_TO_OBJECT where from_Id in (

		select
		from_id from KG_OBJECT_TO_OBJECT where from_Id in (select from_id
		from
		KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or to_id=#{id})
		or to_id in
		(select from_id from KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or
		to_id=#{id})
		union
		select from_id from KG_OBJECT_TO_OBJECT where from_Id
		in (select to_id from
		KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or
		to_id=#{id})
		or to_id in (select to_id from KG_OBJECT_TO_OBJECT where
		from_Id=#{id}
		or to_id=#{id})
		)
		or(

		to_id in (
		select from_id from
		KG_OBJECT_TO_OBJECT where from_Id in (select from_id
		from
		KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or to_id=#{id})
		or to_id in
		(select from_id from KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or
		to_id=#{id})
		union
		select from_id from KG_OBJECT_TO_OBJECT where from_Id
		in (select to_id from
		KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or
		to_id=#{id})
		or to_id in (select to_id from KG_OBJECT_TO_OBJECT where
		from_Id=#{id}
		or to_id=#{id})
		)
		)

		union

		select * from KG_OBJECT_TO_OBJECT
		where from_Id in (

		select to_id from KG_OBJECT_TO_OBJECT where from_Id
		in (select from_id from
		KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or
		to_id=#{id})
		or to_id in (select from_id from KG_OBJECT_TO_OBJECT where
		from_Id=#{id}
		or to_id=#{id})
		union
		select to_id from KG_OBJECT_TO_OBJECT
		where from_Id in (select to_id from
		KG_OBJECT_TO_OBJECT where
		from_Id=#{id}
		or to_id=#{id})
		or to_id in (select to_id from
		KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or to_id=#{id})
		)
		or(

		to_id in (
		select to_id from KG_OBJECT_TO_OBJECT where from_Id in (select from_id
		from
		KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or to_id=#{id})
		or to_id in
		(select from_id from KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or
		to_id=#{id})
		union
		select to_id from KG_OBJECT_TO_OBJECT where from_Id
		in (select to_id from
		KG_OBJECT_TO_OBJECT where from_Id=#{id}
		or
		to_id=#{id})
		or to_id in (select to_id from KG_OBJECT_TO_OBJECT where
		from_Id=#{id}
		or to_id=#{id})
		)
		)
		) O2O
		left join KG_CLASS cfrom on O2O.from_id=CFROM.id
left join KG_CLASS cto on O2O.to_id=cto.id
left join KG_RELATION line on O2O.relation_id=line.id

left join KG_ENTITY efrom on o2o.from_id=efrom.id
left join KG_ENTITY eto on o2o.to_id=eto.id 
 where 1=1 

and line.DELETED='0'
		 and O2O.deleted='0'
	</select>




</mapper>