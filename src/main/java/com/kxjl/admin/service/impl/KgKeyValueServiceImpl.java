/**
 * Copyright (c) 2019 kxjl All Rights Reserved.
 * 
 * This software license agreement (the "Agreement") is a legal agreement between the user 
 * ("You" or the "User") and kxjl ("kxjl") 
 * for the software products (the "Software") and related services (the "Service") that 
 * accompanies this Agreement, as may be updated or replaced by feature enhancements, 
 * updates or maintenance releases and any services that may be provided by kxjl under this Agreement. 
 * You are not allowed to download, install or use the Software or to use Services unless 
 * you accept all the terms and conditions of this Agreement. Your downloading, 
 * installation and use of the Software shall be regarded as your acceptance of the Agreement 
 * and your agreement to be bound by all the terms and conditions of this Agreement.
 * 
 * The above notice shall be included in all copies or substantial portions of the Software.
 * 
 * The software is provided "as is", without warranty of any kind, express or implied, 
 * including but not limited to the warranties of merchantability, fitness for a particular 
 * purpose and noninfringement. In no event shall the authors or copyright holders be 
 * liable for any claim, damages or other liability, whether in an action of contract, 
 * tort or otherwise, arising from, out of or in connection with the software or the use 
 * or other dealings in the software.
 */
package com.kxjl.admin.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.kxjl.admin.persistence.entity.KgKeyValueExample;
import com.kxjl.admin.persistence.entity.KgKeyValueKey;
import com.kxjl.admin.persistence.entity.KgObjectToObjectKey;
import com.kxjl.admin.persistence.entity.KgKeyValue;
import com.kxjl.admin.service.KgKeyValueService;
import com.kxjl.admin.persistence.dao.KgKeyValueMapper;


/**
 * autoGenerated
 * 
 * @date 2020年06月08日 11:50:55
 * @author Generator
 */
@Service("kgKeyValueService")
public class KgKeyValueServiceImpl implements KgKeyValueService {

	@Autowired
	KgKeyValueMapper kgKeyValueMapper;
	
    /**
     * <p>New Info</p>
     * @param kgKeyValue
     * @return
     */
    @Transactional
    public Boolean add(KgKeyValue kgKeyValue) {
        return kgKeyValueMapper.insertSelective(kgKeyValue) > 0;
	}

    /**
     * <p>Modify Info</p>
     * @param kgKeyValue
     * @return
     */
    @Transactional
    public Boolean modify(KgKeyValue kgKeyValue) {
		return kgKeyValueMapper.updateByPrimaryKeySelective(kgKeyValue) > 0;
	}

    /**
     * <p>Delete</p>
     * @param id
     * @return
     */
    @Transactional
	public Boolean delete(String id,String version) {
    	KgKeyValueKey key=new KgKeyValueKey();
    	key.setId(id);
    	key.setVersionId(version);
		return kgKeyValueMapper.deleteByPrimaryKey(key) > 0;
	}

    /**
     * <p>query info by id</p>
     * @param id
     * @return
     */
    @Transactional(readOnly = true)
    public KgKeyValue getOne(String id,String version) {
    	KgKeyValueKey key=new KgKeyValueKey();
    	key.setId(id);
    	key.setVersionId(version);
		return kgKeyValueMapper.selectByPrimaryKey(key);
	}

    /**
     * <p>query all info</p>
     * @return
     */
    @Transactional(readOnly = true)
    public List<KgKeyValue> getAll() {
         KgKeyValueExample example = new KgKeyValueExample();
         return kgKeyValueMapper.selectByExample(example);
	}
}